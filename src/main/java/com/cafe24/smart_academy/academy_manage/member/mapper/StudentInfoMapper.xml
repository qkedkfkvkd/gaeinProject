<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.smart_academy.academy_manage.member.mapper.StudentInfoMapper">
	
	<!-- 로그인 테이블에서 해당 아이디 존재여부 확인 -->
	<select id="memberLoginInfoById" parameterType="String" resultType="String">
		select
			member_id
		from
			member_login
		where
			member_id = #{memberId}
	</select>
	
	
	<!-- 관리자가 회원등록할 시 회원신상정보 테이블에서 유니크값인 이메일이 중복되는지 확인 -->
	<select id="memberByEmail" parameterType="String" resultType="String">
		select
			member_email
		from
			member
		where
			member_email = #{memberEmail}
	</select>
	
	
	<!-- 관리자가 학생 등록시 학부모 테이블에서 유니크값인 폰번호 중복 체크 -->
	<select id="parentByPhone" parameterType="String" resultType="String">
		select
			parent_phone
		from
			parent
		where
			parent_phone = #{inputParentPhone}
	</select>
	
	
	<!-- 관리자가 회원등록할 시 로그인 테이블 등록 -->
	<insert id="addMemberLogin" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin">
		insert into member_login (
			 member_id
			,member_pw
			,member_level
			,member_registered_date
		) values (
			 #{memberId}
			,#{memberPw}
			,#{memberLevel}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자가 회원등록할 시 회원신상정보 테이블 등록 -->
	<insert id="addMember" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Member">
		insert into member (
			 member_id
			,member_name
			,member_birth
			,member_email
			,member_tel
			,member_phone
			,member_address
			,member_registered_date
		) values (
			 #{memberId}
			,#{memberName}
			,#{memberBirth}
			,#{memberEmail}
			,#{memberTel}
			,#{memberPhone}
			,#{memberAddress}
			,curdate()
		)
	</insert>
	
	
	<!-- 학생 등록시 같이 입력된 학부모 정보를 학부모 테이블에 저장한다. -->
	<insert id="addParent" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Parent">
		insert into parent (
			 member_id
			,parent_name
			,parent_phone
			,parent_registered_date
		) values (
			 #{memberId}
			,#{parentName}
			,#{parentPhone}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 학생목록페이지로 이동하고자 할때 가져올 리스트 -->
	<!-- 관리자 : 입력한 학생명과 가입기간으로 디비에서 권한이 -->
	<!-- 		  학생인 사람들만 목록을 가져온다. -->
	<!-- 로그인 테이블 - 회원 신상정보 테이블 아이디로 조인 -->
	<select id="listStudentInfo"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Member"
			resultType="map">
		select
			 m.member_id					AS memberId
			,m.member_level					AS memberLevel
			,me.member_name					AS memberName
			,me.member_birth				AS memberBirth
			,me.member_registered_date		AS memberRegisteredDate
		from
			 member_login					AS m
			,member							AS me
		on
			m.member_id = me.member_id
		where
			m.member_level = '학생'
		
		<!-- 학생명을 입력했을 경우 -->
		<if test="memberName != null and memberName neq ''.toString()">
		and
			me.member_name = #{memberName}
		</if>
		
		<!-- 시작 가입기간만 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  (endJoinDate == null or endJoinDate eq ''.toString())">
		and
			me.member_registered_date >= #{startJoinDate}
		</if>
		
		<!-- 시작 가입기간부터 마지막 가입기간까지 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  endJoinDate != null and endJoinDate neq ''.toString()">
		and
			me.member_registered_date
		between
			#{startJoinDate}
		and
			#{endJoinDate}
		</if>
	</select>
	
	
	
	<!-- 관리자가 특정 학생의 결제정보를 가지고 오고자 할때 사용 -->
	<select id="paymentInfoById" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.PaymentInfo">
		select
			 member_id					AS memberId
			,payment_day				AS paymentDay
			,payment_way				AS paymentWay
			,payment_content			AS paymentContent
			,payment_schedule_money		AS paymentScheduleMoney
			,actuality_payment_money	AS actualityPaymentMoney
			,start_course_day			AS startCourseDay
			,end_course_day				AS endCourseDay
			,payment_reference			AS paymentReference
			,payment_registered_date	AS paymentRegisteredDate
		from
			payment_info
		where
			member_id = #{memberId}
	</select>
	
	
	<!-- 관리자 특정 학생의 결제정보 입력 처리 -->
	<insert id="addPaymentInfo" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.PaymentInfo">
		insert into payment_info (
			 member_id
			,payment_day
			,payment_way
			,payment_content
			,payment_schedule_money
			,actuality_payment_money
			,start_course_day
			,end_course_day
			,payment_reference
			,payment_registered_date
		) values (
			 #{memberId}
			,#{paymentDay}
			,#{paymentWay}
			,#{paymentContent}
			,#{paymentScheduleMoney}
			,#{actualityPaymentMoney}
			,#{startCourseDay}
			,#{endCourseDay}
			,#{paymentReference}
			,curdate()
		)
	</insert>
	
	
	<!-- 이미 학생 리스트를 가져올 때 권한을 학생만 가져오게 했으므로 굳이 또 권한 학생만 가져오게 조건을 줄 필요가 없다 -->
	<!-- 관리자의 상담관리 페이지에서 보여줄 학생의 이름과 생년월일을 가져온다. -->
	<select id="studentInfoIdNameBirthById" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.Member">
		select
			 member_id			AS memberId
			,member_name		AS memberName
			,member_birth		AS memberBirth
		from
			member
		where
			member_id = #{memberId}
	</select>
	
	
	<!-- 관리자가 학생목록에서 특정 학생의 상담 관리 클릭했을 시 보여줄 해당 학생 상담내역 리스트 -->
	<select id="oneStudentCounselHistoryList" parameterType="String" resultType="map">
		select
			 ct.counsel_type_no				AS counselTypeNo
			,ct.counsel_type_name			AS counselTypeName
			,cr.counsel_result_no			AS counselResultNo
			,cr.counsel_result_name			AS counselResultName
			,ca.counsel_history_no			AS counselHistoryNo
			,ca.counsel_appointment_date	AS counselAppointmentDate
			,login.member_id				AS memberId
			,co.counsel_content				AS counselContent
		from
			 counsel_type					AS ct
			,counsel_result					AS cr
			,counsel_appointment			AS ca
			,member_login					AS login
			,counsel						AS co
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			cr.counsel_result_no = ca.counsel_result_no
		and
			ca.member_id = login.member_id
		and
			ca.counsel_history_no = co.counsel_history_no
		and
			ca.counsel_whether = 'Y'
		and
			ca.counsel_appointment_whether = 'Y'
		and
			login.member_id = #{memberId}
	</select>
	
	
	<!-- 관리자가 학생목록에서 특정 학생의 상담 관리 클릭했을 시 보여줄 해당 학생 상담예약현황 리스트  -->
	<select id="oneStudentCounselAppointmentList" parameterType="String" resultType="map">
		select
			 ct.counsel_type_no				AS counselTypeNo
			,ct.counsel_type_name			AS counselTypeName
			,cr.counsel_result_no			AS counselResultNo
			,cr.counsel_result_name			AS counselResultName
			,ca.counsel_history_no			AS counselHistoryNo
			,ca.counsel_appointment_date	AS counselAppointmentDate
			,ca.counsel_appointment_whether	AS counselAppointmentWhether
			,login.member_id				AS memberId
		from
			 counsel_type					AS ct
			,counsel_result					AS cr
			,counsel_appointment			AS ca
			,member_login					AS login
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			cr.counsel_result_no = ca.counsel_result_no
		and
			ca.member_id = login.member_id
		and
			ca.counsel_whether = 'N'
		and
			ca.counsel_appointment_whether = 'N'
		and
			login.member_id = #{memberId}
	</select>
	
	
	<!-- 관리자 : 학생 상담관련 폼 이동 시 상담구분코드와 상담결과코드에서 -->
	<!-- 특정 상담결과명으로된 모든 리스트 가지고 오기 -->
	<select id="listCounselKind" parameterType="String" resultType="map">
		select
			 ct.counsel_type_no				AS counselTypeNo
			,ct.counsel_type_name			AS counselTypeName
			,cr.counsel_result_no			AS counselResultNo
			,cr.counsel_result_name			AS counselResultName
		from
			 counsel_type					AS ct
			,counsel_result					AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			cr.counsel_result_name = #{counselResultName}
	</select>
	
	
	<!-- 관리자 : 해당 상담결과코드로 상담구분코드 리스트 가져오기 -->
	<select id="counselTypeListByCounselResultName" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		select distinct
			 ct.counsel_type_no			AS counselTypeNo
			,ct.counsel_type_name		AS counselTypeName
		from
			 counsel_type				AS ct
			,counsel_result				AS cr
		where
			counsel_result_name=#{counselResultName};
	</select>
	
	
	<!-- 관리자 : 상담결과코드 이름만 리스트로 가져오기 -->
	<select id="counselResultNameList"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		select distinct
			counsel_result_name		AS counselResultName
		from
			counsel_result
	</select>
	
	
	<!-- 관리자 : 상담구분코드와 상담결과명으로 상담결과코드를 얻어온다. -->
	<select id="getCounselResultNo" resultType="String">	
		select
			counsel_result_no		AS counselResultNo
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			ct.counsel_type_no = #{counselTypeNo}
		and
			cr.counsel_result_name = #{counselResultName}
	</select>
	
	
	<!-- 관리자 : 상담예약테이블에서 상담내역코드 중복 확인 -->
	<select id="counselAppointmentBycounselHistoryNo"
			parameterType="String" resultType="String">
		select
			counsel_history_no
		from
			counsel_appointment
		where
			counsel_history_no = #{inputCounselHistoryNo}
	</select>
	
	
	<!-- 관리자 : 상담예약테이블 추가 처리 -->
	<insert id="addCounselAppointment">
		insert into counsel_appointment (
			 counsel_history_no
			,counsel_result_no
			,member_id
			,counsel_appointment_date
			,counsel_whether
			,counsel_appointment_whether
			,counsel_appointment_registered_date
		) values (
			 #{counselHistoryNo}
			,#{counselResultNo}
			,#{memberId}
			,#{counselAppointmentDate}
			,#{counselWhether}
			,#{counselAppointmentWhether}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 상담테이블에 상담내용 추가 처리 -->
	<insert id="addCounsel">
		insert into counsel (
			 counsel_history_no
			,counsel_content
			,counsel_registered_date
		) values (
			 #{counselHistoryNo}
			,#{counselContent}
			,curdate()
		)
	</insert>
	
	
	<!-- 로그인 테이블은 학생 권한만 가져오기 위함이다. -->
	<!-- 관리자 : 상담예약현황 리스트 가져오기 -->
	<!-- 관리자 : 상담예약현황 리스트에서 선택한 상담코드로 검색 -->
	<select id="counselReservationStateList"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult"
			resultType="map">
		select
			 ct.counsel_type_no				AS counselTypeNo
			,ct.counsel_type_name			AS counselTypeName
			,cr.counsel_result_no			AS counselResultNo
			,cr.counsel_result_name			AS counselResultName
			,ca.counsel_history_no			AS counselHistoryNo
			,ca.counsel_appointment_date	AS counselAppointmentDate
			,login.member_id				AS memberId
			,mem.member_name				AS memberName
			,mem.member_email				AS memberEmail
		from
			 counsel_type					AS ct
			,counsel_result					AS cr
			,counsel_appointment			AS ca
			,member_login					AS login
			,member							AS mem
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			ca.counsel_result_no = cr.counsel_result_no
		and
			ca.member_id = login.member_id
		and
			ca.counsel_whether = 'N'
		and
			ca.counsel_appointment_whether = 'N'
		and
			login.member_id = mem.member_id
		and
			login.member_level = '학생'
		<!-- 상담구분을 선택했을 때 -->
		<if test="counselTypeNo != null and counselTypeNo neq ''.toString() and counselTypeNo neq 'not'">
		and
			ct.counsel_type_no = #{counselTypeNo}
			<!-- ajax 처리로 상담구분을 선택해야 상담결과가 나오므로 상담구분 안쪽에 조건문을 두었다. -->
			<!-- 상담구분을 선택하고 상담결과를 선택하지 않으면 밑의 조건문은 실행되지 않는다. -->
			<!-- 상담구분을 선택하고 상담결과를 선택했을 경우 -->
			<if test="counselResultNo != null and counselResultNo neq ''.toString()">
		and
			cr.counsel_result_no = #{counselResultNo}
			</if>
		</if>
	</select>
</mapper>