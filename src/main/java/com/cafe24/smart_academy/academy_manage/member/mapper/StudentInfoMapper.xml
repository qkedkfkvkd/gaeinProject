<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.smart_academy.academy_manage.member.mapper.StudentInfoMapper">
	
	<!-- 관리자가 학생 등록시 학부모 테이블에서 유니크값인 폰번호 중복 체크 -->
	<select id="parentByPhone" parameterType="String" resultType="String">
		select
			parent_phone
		from
			parent
		where
			parent_phone = #{inputParentPhone}
	</select>
	
	
	<!-- 학생 등록시 같이 입력된 학부모 정보를 학부모 테이블에 저장한다. -->
	<insert id="addParent"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Parent">
		insert into parent (
			 member_id
			,parent_name
			,parent_phone
			,parent_registered_date
		) values (
			 #{memberId}
			,#{parentName}
			,#{parentPhone}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 특정 학생 상세 페이지 이동 -->
	<select id="detailStudentInfoByMemberId"
			parameterType="String" resultType="map">
		select
			 login.member_id				AS memberId
			,login.member_level				AS memberLevel
			,mem.member_name				AS memberName
			,mem.member_birth				AS memberBirth
			,mem.member_email				AS memberEmail
			,mem.member_tel					AS memberTel
			,mem.member_phone				AS memberPhone
			,mem.member_address				AS memberAddress
			,mem.member_registered_date		AS memberRegisteredDate
			,par.parent_name				AS parentName
			,par.parent_phone				AS parentPhone
		from
			 member_login		AS login
			,member				AS mem
			,parent				AS par
		where
			login.member_id	= mem.member_id
		and
			login.member_id = par.member_id
		and
			login.member_level = '학생'
		and
			login.member_id = #{memberId}
	</select>
	
	
	<!-- 관리자 : 학부모 정보 수정 처리 -->
	<!-- 학생정보를 수정하면서 학부모 정보도 같이 수정된다. -->
	<update id="updateParent"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Parent">
		update
			parent
		<trim prefix="set" prefixOverrides=",">
			<if test="parentName != null and parentName neq ''.toString()">
				 parent_name		= #{parentName}
			</if>
			<if test="parentPhone != null and parentPhone neq ''.toString()">
				,parent_phone		= #{parentPhone}
			</if>
		</trim>
		where
			member_id = #{memberId}
	</update>
	
	
	
	
	<!-- 관리자가 특정 학생의 결제정보를 가지고 오고자 할때 사용 -->
	<select id="paymentInfoById" parameterType="String" resultType="map">
		select
			 login.member_id				AS memberId
			,mem.member_name				AS memberName
			,mem.member_birth				AS memberBirth
			,pay.payment_day				AS paymentDay
			,pay.payment_way				AS paymentWay
			,pay.payment_content			AS paymentContent
			,pay.payment_schedule_money		AS paymentScheduleMoney
			,pay.actuality_payment_money	AS actualityPaymentMoney
			,pay.start_course_day			AS startCourseDay
			,pay.end_course_day				AS endCourseDay
			,pay.payment_reference			AS paymentReference
			,pay.payment_registered_date	AS paymentRegisteredDate
		from
			 payment_info				AS pay
			,member_login				AS login
			,member						AS mem
		where
			login.member_id = mem.member_id
		and
			login.member_id = pay.member_id
		and
			login.member_id = #{memberId}
	</select>
	
	
	<!-- 관리자 : 특정 학생의 결제정보 입력 처리 -->
	<insert id="addPaymentInfo" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.PaymentInfo">
		insert into payment_info (
			 member_id
			,payment_day
			,payment_way
			,payment_content
			,payment_schedule_money
			,actuality_payment_money
			,start_course_day
			,end_course_day
			,payment_reference
			,payment_registered_date
			,payment_modification_date
		) values (
			 #{memberId}
			,#{paymentDay}
			,#{paymentWay}
			,#{paymentContent}
			,#{paymentScheduleMoney}
			,#{actualityPaymentMoney}
			,#{startCourseDay}
			,#{endCourseDay}
			,#{paymentReference}
			,curdate()
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 특정학생 결제정보 수정 처리 -->
	<update id="updatePaymentInfo"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.PaymentInfo">
		update
			payment_info
		<trim prefix="set" prefixOverrides=",">
			<if test="paymentWay != null and paymentWay neq ''.toString()">
				 payment_way				= #{paymentWay}
			</if>
			<if test="paymentContent != null and paymentContent neq ''.toString()">
				,payment_content			= #{paymentContent}
			</if>
			<if test="paymentDay != null and paymentDay neq ''.toString()">
				,payment_day				= #{paymentDay}
			</if>
			<if test="paymentScheduleMoney != null and paymentScheduleMoney neq ''.toString()">
				,payment_schedule_money		= #{paymentScheduleMoney}
			</if>
			<if test="actualityPaymentMoney != null and actualityPaymentMoney neq ''.toString()">
				,actuality_payment_money	= #{actualityPaymentMoney}
			</if>
			<if test="startCourseDay != null and startCourseDay neq ''.toString()">
				,start_course_day			= #{startCourseDay}
			</if>
			<if test="endCourseDay != null and endCourseDay neq ''.toString()">
				,end_course_day				= #{endCourseDay}
			</if>
			<if test="paymentReference != null and paymentReference neq ''.toString()">
				,payment_reference			= #{paymentReference}
			</if>
		</trim>
		where
			member_id = #{memberId}
	</update>
	
	
	<!-- 관리자 : 수납현황 리스트 -->
	<!-- (결제 테이블에서 납부예정금액이 0이고 실납부금액이 0보다 큰 리스트) -->
	<!-- 관리자 : 미납현황 리스트(결제 테이블에서 납부예정금액이 0보다 큰 리스트) -->
	<!-- 관리자 : 수납 혹은 미납 현황 검색결과 리스트 -->
	<!-- (키워드: 이름, 시작가입기간, 마지막가입기간) -->
	<select id="paymentStateList"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.MemberSearchVO"
			resultType="map">
		select
			 login.member_id				AS memberId
			,login.member_level				AS memberLevel
			,mem.member_name				AS memberName
			,pay.payment_day				AS paymentDay
			,pay.payment_way				AS paymentWay
			,pay.payment_content			AS paymentContent
			,pay.payment_schedule_money		AS paymentScheduleMoney
			,pay.actuality_payment_money	AS actualityPaymentMoney
			,pay.start_course_day			AS startCourseDay
			,pay.end_course_day				AS endCourseDay
			,pay.payment_registered_date	AS paymentRegisteredDate
			,pay.payment_modification_date	AS paymentModificationDate
		from
			 member_login				AS login
			,member						AS mem
			,payment_info				AS pay
		where
			login.member_id = mem.member_id
		and
			login.member_id = pay.member_id
		<if test="keyWord != null and keyWord eq 'payment'.toString()">
		and
			pay.payment_schedule_money = 0
		and
			pay.actuality_payment_money > 0
		</if>
		<if test="keyWord != null and keyWord eq 'notPayment'.toString()">
		and
			pay.payment_schedule_money > 0
		</if>
		
		<!-- 회원 이름을 입력했을 경우 -->
		<if test="memberName != null and memberName neq ''.toString()">
		and
			mem.member_name like CONCAT('%',#{memberName},'%')
		</if>
		
		<!-- 시작 가입기간만 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  (endJoinDate == null or endJoinDate eq ''.toString())">
		and
			mem.member_registered_date >= #{startJoinDate}
		</if>
		
		<!-- 마지막 가입기간만 입력했을 경우 -->
		<if test="startJoinDate == null and startJoinDate eq ''.toString() and
				  (endJoinDate != null or endJoinDate neq ''.toString())">
		and
			mem.member_registered_date
		<![CDATA[ < ]]>
			#{endJoinDate}
		</if>
		
		<!-- 시작 가입기간부터 마지막 가입기간까지 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  endJoinDate != null and endJoinDate neq ''.toString()">
		and
			mem.member_registered_date
		between
			#{startJoinDate}
		and
			#{endJoinDate}
		</if>
	</select>
	
	
	
	
	
	<!-- 이미 학생 리스트를 가져올 때 권한을 학생만 가져오게 했으므로 굳이 또 권한 학생만 가져오게 조건을 줄 필요가 없다 -->
	<!-- 관리자의 상담관리 페이지에서 보여줄 학생의 이름과 생년월일을 가져온다. -->
	<select id="studentInfoIdNameBirthById" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.Member">
		select
			 member_id			AS memberId
			,member_name		AS memberName
			,member_birth		AS memberBirth
		from
			member
		where
			member_id = #{memberId}
	</select>
	
	
	
	
	<!-- 학생 : 상담예약신청 시 상담내역코드 중복 확인 -->
	<select id="counselAppointmentByCounselHistoryNo"
			parameterType="String" resultType="String">
		select
			counsel_history_no
		from
			counsel_appointment
		where
			counsel_history_no = #{counselHistoryNo}
	</select>
	
	
	
	
	
	<!-- 관리자 : 신입생상담 리스트 가져오기 -->
	<!-- 학원에 입학하면서 처음 받는 상담이 입학상담이므로 -->
	<!-- 상담예약 테이블에 해당 회원의 레코드가 존재하지 않으면 -->
	<!-- 전부 신입생으로 간주한다. -->
	<select id="admissionCounselMemberIdList" resultType="String">
		select
			login.member_id		AS memberId
		from
			member_login			AS login
		left outer join
			counsel_appointment		AS ca
		on
			login.member_id = ca.member_id
		where
			ca.counsel_history_no is null
		and
			login.member_level = '학생'
	</select>
	
	
	<!-- 관리자: 입학 상담해야할 신입생 리스트 가져오기 -->
	<select id="admissionCounselList"
			parameterType="map"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.Member">
		select
			 member_id					AS memberId
			,member_name				AS memberName
			,member_birth				AS memberBirth
			,member_email				AS memberEmail
			,member_phone				AS memberPhone
			,member_registered_date		AS memberRegisteredDate
		from
			member
		where
			member_id in
		<if test="memberIdList != null">
			<foreach collection="memberIdList" item="item" open="(" close=")" separator=",">
			#{item,jdbcType=VARCHAR}
			</foreach>
		</if>
		<!-- 회원 이름을 입력했을 경우 -->
		<if test="memberName != null and memberName neq ''.toString()">
		and
			member_name like CONCAT('%',#{memberName},'%')
		</if>
		
		<!-- 시작 가입기간만 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  (endJoinDate == null or endJoinDate eq ''.toString())">
		and
			member_registered_date >= #{startJoinDate}
		</if>
		
		<!-- 마지막 가입기간만 입력했을 경우 -->
		<if test="startJoinDate == null and startJoinDate eq ''.toString() and
				  (endJoinDate != null or endJoinDate neq ''.toString())">
		and
			member_registered_date
		<![CDATA[ < ]]>
			#{endJoinDate}
		</if>
		
		<!-- 시작 가입기간부터 마지막 가입기간까지 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  endJoinDate != null and endJoinDate neq ''.toString()">
		and
			member_registered_date
		between
			#{startJoinDate}
		and
			#{endJoinDate}
		</if>
	</select>
	
	
	
	
	
	<!-- 관리자가 학생목록에서 특정 학생의 상담 관리 클릭했을 시 보여줄 해당 학생 상담내역 리스트 -->
	<!-- 관리자 : 상담내역리스트 -->
	<!-- 관리자 : 학생 상담내역 상세보기 -->
	<select id="oneStudentCounselHistoryOneOrList"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselAppointment"
			resultType="map">
		select
			 ct.counsel_type_no							AS counselTypeNo
			,ct.counsel_type_name						AS counselTypeName
			,cr.counsel_result_no						AS counselResultNo
			,cr.counsel_result_name						AS counselResultName
			,ca.counsel_history_no						AS counselHistoryNo
			,ca.counsel_appointment_date				AS counselAppointmentDate
			,ca.counsel_appointment_registered_date		AS counselAppointmentRegisteredDate
			,login.member_id							AS memberId
			,co.counsel_content							AS counselContent
			,mem.member_name							AS memberName
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
			,counsel_appointment	AS ca
			,member_login			AS login
			,member					AS mem
			,counsel				AS co
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			cr.counsel_result_no = ca.counsel_result_no
		and
			ca.counsel_history_no = co.counsel_history_no
		and
			ca.member_id = login.member_id
		and
			login.member_id = mem.member_id
		and
			ca.counsel_whether = '유'
		and
			ca.counsel_appointment_whether = '유'
		<if test="counselHistoryNo != null and counselHistoryNo neq ''.toString()">
		and
			ca.counsel_history_no = #{counselHistoryNo}
		</if>
		<if test="memberId != null and memberId neq ''.toString()">
		and
			login.member_id = #{memberId}
		</if>
		<if test="counselTypeNo != null and counselTypeNo neq ''.toString()">
		and
			ct.counsel_type_no = #{counselTypeNo}
		</if>
		<if test="counselResultNo != null and counselResultNo neq ''.toString()">
		and
			cr.counsel_result_no = #{counselResultNo}
		</if>
	</select>
	
	
	<!-- 관리자가 학생목록에서 특정 학생의 상담 관리 클릭했을 시 보여줄 해당 학생 상담예약현황 리스트  -->
	<!-- 관리자 : 학생예약신청 상세보기 -->
	<select id="counselAppointmentOneOrList"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselAppointment"
			resultType="map">
		select
			 ct.counsel_type_no							AS counselTypeNo
			,ct.counsel_type_name						AS counselTypeName
			,cr.counsel_result_no						AS counselResultNo
			,cr.counsel_result_name						AS counselResultName
			,ca.counsel_history_no						AS counselHistoryNo
			,ca.counsel_appointment_date				AS counselAppointmentDate
			,ca.counsel_appointment_whether				AS counselAppointmentWhether
			,ca.counsel_appointment_registered_date		AS counselAppointmentRegisteredDate
			,ca.counsel_whether							AS counselWhether
			,ca.counsel_appointment_whether				AS counselAppointmentWhether
			,login.member_id							AS memberId
			,mem.member_name							AS memberName
			,mem.member_email							AS memberEmail
			,mem.member_birth							AS memberBirth
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
			,counsel_appointment	AS ca
			,member_login			AS login
			,member					AS mem
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			cr.counsel_result_no = ca.counsel_result_no
		and
			ca.member_id = login.member_id
		and
			login.member_id = mem.member_id
		<if test="counselWhether == '무'.toString()">
		and
			counsel_whether = '무'
		</if>
		<if test="counselAppointmentWhether == '무'.toString()">
		and
			counsel_appointment_whether = '무'
		</if>
		<!-- 학생예약신청 상세보기 -->
		<if test="counselHistoryNo != null and counselHistoryNo neq ''.toString()">
		and
			ca.counsel_history_no = #{counselHistoryNo}
		</if>
		<!-- 특정 학생의 상담 관리 클릭했을 시 보여줄 해당 학생 상담예약현황 리스트 -->
		<if test="memberId != null and memberId neq ''.toString()">
		and
			login.member_id = #{memberId}
		</if>
		
		<!-- 상담구분코드 선택 후 검색 -->
		<if test="counselTypeNo != null and counselTypeNo neq ''.toString() and counselTypeNo neq 'not'">
		and
			ct.counsel_type_no = #{counselTypeNo}
		</if>
		
		<!-- 상담결과코드 선택 후 검색 -->
		<if test="counselResultNo != null and counselResultNo neq ''.toString()">
		and
			ca.counsel_result_no = #{counselResultNo}
		</if>
	</select>
	
	
	<!-- 관리자 : 학생 상담관련 폼 이동 시 상담구분코드와 상담결과코드에서 -->
	<!-- 특정 상담결과명으로된 모든 리스트 가지고 오기 -->
	<select id="counselKindList" parameterType="String" resultType="map">
		select
			 ct.counsel_type_no				AS counselTypeNo
			,ct.counsel_type_name			AS counselTypeName
			,cr.counsel_result_no			AS counselResultNo
			,cr.counsel_result_name			AS counselResultName
		from
			 counsel_type					AS ct
			,counsel_result					AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			cr.counsel_result_name = #{counselResultName}
	</select>
	
	
	<!-- 관리자 : 해당 상담결과코드로 상담구분코드 리스트 가져오기 -->
	<select id="counselTypeListByCounselResultName" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		select distinct
			 ct.counsel_type_no			AS counselTypeNo
			,ct.counsel_type_name		AS counselTypeName
		from
			 counsel_type				AS ct
			,counsel_result				AS cr
		where
			counsel_result_name=#{counselResultName};
	</select>
	
	
	<!-- 관리자 : 상담결과코드 이름만 리스트로 가져오기 -->
	<select id="counselResultNameList"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		select distinct
			counsel_result_name		AS counselResultName
		from
			counsel_result
	</select>
	
	
	<!-- 관리자 : 상담구분코드와 상담결과명으로 상담결과코드를 얻어온다. -->
	<select id="getCounselResultNo" resultType="String">	
		select
			counsel_result_no		AS counselResultNo
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			ct.counsel_type_no = #{counselTypeNo}
		and
			cr.counsel_result_name = #{counselResultName}
	</select>
	
	
	<!-- 관리자 : 상담예약테이블 추가 처리 -->
	<insert id="addCounselAppointment">
		insert into counsel_appointment (
			 counsel_history_no
			,counsel_result_no
			,member_id
			,counsel_appointment_date
			,counsel_whether
			,counsel_appointment_whether
			,counsel_appointment_registered_date
		) values (
			 #{counselHistoryNo}
			,#{counselResultNo}
			,#{memberId}
			,#{counselAppointmentDate}
			,#{counselWhether}
			,#{counselAppointmentWhether}
			,curdate()
		)
	</insert>
	
	
	<!-- 로그인 테이블은 학생 권한만 가져오기 위함이다. -->
	<!-- 관리자 : 상담예약현황 리스트 가져오기 -->
	<!-- 관리자 : 상담예약현황 리스트에서 선택한 상담코드로 검색 -->
	<select id="counselReservationStateList"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult"
			resultType="map">
		select
			 ct.counsel_type_no					AS counselTypeNo
			,ct.counsel_type_name				AS counselTypeName
			,cr.counsel_result_no				AS counselResultNo
			,cr.counsel_result_name				AS counselResultName
			,ca.counsel_history_no				AS counselHistoryNo
			,ca.counsel_appointment_date		AS counselAppointmentDate
			,ca.counsel_whether					AS counselWhether
			,ca.counsel_appointment_whether		AS counselAppointmentWhether
			,login.member_id					AS memberId
			,mem.member_name					AS memberName
			,mem.member_email					AS memberEmail
		from
			 counsel_type					AS ct
			,counsel_result					AS cr
			,counsel_appointment			AS ca
			,member_login					AS login
			,member							AS mem
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			ca.counsel_result_no = cr.counsel_result_no
		and
			ca.member_id = login.member_id
		and
			login.member_id = mem.member_id
		and
			login.member_level = '학생'
		<!-- 상담구분을 선택했을 때 -->
		<if test="counselTypeNo != null and counselTypeNo neq ''.toString() and counselTypeNo neq 'not'">
		and
			ct.counsel_type_no = #{counselTypeNo}
			<!-- ajax 처리로 상담구분을 선택해야 상담결과가 나오므로 상담구분 안쪽에 조건문을 두었다. -->
			<!-- 상담구분을 선택하고 상담결과를 선택하지 않으면 밑의 조건문은 실행되지 않는다. -->
			<!-- 상담구분을 선택하고 상담결과를 선택했을 경우 -->
			<if test="counselResultNo != null and counselResultNo neq ''.toString()">
		and
			cr.counsel_result_no = #{counselResultNo}
			</if>
		</if>
	</select>
	
	
	<!-- 관리자 : 학생예약신청 예약처리하기 -->
	<update id="permissionCounselAppointment" parameterType="String">
		update
			counsel_appointment
		set
			counsel_appointment_whether = '유'
		where
			counsel_history_no = #{counselHistoryNo}
	</update>
	
	
	<!-- 관리자, 학생 : 학생상담예약신청 수정 처리 -->
	<update id="updateCounselAppointment"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselAppointment">
		update
			counsel_appointment
		<trim prefix="set" prefixOverrides=",">
			<if test="counselResultNo != null and counselResultNo neq ''.toString()">
				 counsel_result_no				= #{counselResultNo}
			</if>
			<if test="counselAppointmentDate != null and counselAppointmentDate neq ''.toString()">
				,counsel_appointment_date	= #{counselAppointmentDate}
			</if>
		</trim>
		where
			counsel_history_no = #{counselHistoryNo}
	</update>
	
	
	<!-- 관리자, 학생 : 학생상담예약신청 삭제 처리 -->
	<delete id="deleteCounselAppointment" parameterType="String">
		delete from
			counsel_appointment
		where
			counsel_history_no = #{counselHistoryNo}
	</delete>
	
	
	<!-- 관리자 : 상담신청 테이블 상담 처리하기 -->
	<update id="permissionCounsel"
			parameterType="String">
		update
			counsel_appointment
		set
			counsel_whether = '유'
		where
			counsel_history_no = #{counselHistoryNo}
		and
			member_id = #{memberId}
	</update>
	
	
	
	
	<!-- 관리자 : 상담테이블에 해당 상담내역코드로된 레코드가 존재하는지 확인 -->
	<select id="counselByCounselHistoryNo"
			parameterType="String" resultType="String">
		select
			counsel_history_no
		from
			counsel
		where
			counsel_history_no = #{counselHistoryNo}
	</select>
	
	
	<!-- 관리자 : 상담테이블에 상담내용 추가 처리 -->
	<insert id="addCounsel">
		insert into counsel (
			 counsel_history_no
			,counsel_content
			,counsel_registered_date
		) values (
			 #{counselHistoryNo}
			,#{counselContent}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 상담내용 테이블 수정 처리 -->
	<update id="updateCounsel"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Counsel">
		update
			counsel
		set
			counsel_content = #{counselContent}
		where
			counsel_history_no = #{counselHistoryNo}
	</update>
	
	
	<!-- 관리자 : 해당 상담내용 삭제 처리 -->
	<delete id="deleteCounsel" parameterType="String">
		delete from
			counsel
		where
			counsel_history_no = #{counselHistoryNo}
	</delete>
</mapper>