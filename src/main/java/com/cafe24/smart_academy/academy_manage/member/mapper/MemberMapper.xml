<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.smart_academy.academy_manage.member.mapper.MemberMapper">
	
	<!-- 로그인 테이블에서 해당 아이디 존재여부 확인 -->
	<select id="memberLoginInfoById" parameterType="String" resultType="String">
		select
			member_id
		from
			member_login
		where
			member_id = #{memberId}
	</select>
	
	
	<!-- 로그인 정보 수정 처리 (패스워드 수정처리) -->
	<update id="updateLoginPassword"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin">
		update
			member_login
		set
			member_pw = #{memberPw}
		where
			member_id = #{memberId}
	</update>
	
	
	<!-- 아이디 찾기 -->
	<select id="findLoginId"
			parameterType="map"
			resultType="String">
		select
			login.member_id		AS memberId
		from
			 member_login			AS login
			,member					AS mem
		where
			login.member_id = mem.member_id
		and
			mem.member_name = #{memberName}
		and
			mem.member_email = #{memberEmail}
	</select>
	
	
	<!-- 비밀번호 찾기 -->
	<select id="findLoginPw"
			parameterType="map"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin">
		select
			 login.member_id		AS memberId
			,login.member_pw		AS memberPw
		from
			 member_login			AS login
			,member					AS mem
		where
			login.member_id = mem.member_id
		and
			login.member_id = #{memberId}
		and
			mem.member_email = #{memberEmail}
	</select>
	
	
	<!-- 관리자가 회원등록할 시 회원신상정보 테이블에서 유니크값인 이메일이 중복되는지 확인 -->
	<select id="memberByEmail" parameterType="String" resultType="String">
		select
			member_email
		from
			member
		where
			member_email = #{memberEmail}
	</select>
	
	
	<!-- 관리자 : 학생이나 강사를 등록할 시 로그인 테이블 등록 -->
	<insert id="addMemberLogin" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin">
		insert into member_login (
			 member_id
			,member_pw
			,member_level
			,member_registered_date
		) values (
			 #{memberId}
			,#{memberPw}
			,#{memberLevel}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 학생이나 강사를 등록할 시 회원신상정보 테이블 등록 -->
	<insert id="addMember"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Member">
		insert into member (
			 member_id
			,member_name
			,member_birth
			,member_email
			,member_tel
			,member_phone
			,member_address
			,member_registered_date
		) values (
			 #{memberId}
			,#{memberName}
			,#{memberBirth}
			,#{memberEmail}
			,#{memberTel}
			,#{memberPhone}
			,#{memberAddress}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 관리자, 특정 학생, 강사 상세정보 수정 처리 -->
	<update id="updateMemberInfo"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.Member">
		update
			member
		<trim prefix="set" prefixOverrides=",">
			<if test="memberName != null and memberName neq ''.toString()">
				 member_name		= #{memberName}
			</if>
			<if test="memberBirth != null and memberBirth neq ''.toString()">
				,member_birth		= #{memberBirth}
			</if>
			<if test="memberEmail != null and memberEmail neq ''.toString()">
				,member_email		= #{memberEmail}
			</if>
			<if test="memberPhone != null and memberPhone neq ''.toString()">
				,member_phone		= #{memberPhone}
			</if>
			<if test="memberTel != null and memberTel neq ''.toString()">
				,member_tel			= #{memberTel}
			</if>
			<if test="memberAddress != null and memberAddress neq ''.toString()">
				,member_address		= #{memberAddress}
			</if>
		</trim>
		where
			member_id = #{memberId}
	</update>
	
	
	<!-- 관리자 : 학생이나 강사 삭제시 해당 로그인 레코드 삭제 -->
	<!-- 학생이나 강사를 등록하다가 중간에 실패시 있을지도 모르는 로그인 레코드 삭제 -->
	<!-- 관리자 : 해당 회원 로그인 정보 삭제 처리 -->
	<!-- 학생을 삭제할 경우 : CASCADE에 의해 결제정보, 회원신상정보, 학부모정보,
							  수강신청정보, 상담정보가 지워진다. -->
	<!-- 타 관리자나 강사를 삭제할 경우 : CASCADE에 의해 회원신상정보, 강사정보가 지워진다. -->
	<delete id="deleteMemberLogin" parameterType="String">
		delete from
			member_login
		where
			member_id = #{memberId}
	</delete>
	
	
	<!-- 관리자 : 결제정보가 없는 학생일 경우 -->
	<!-- 제목 상단에 아이디, 이름, 생년월일을 나타내기 위함 -->
	<select id="memberSimpleInfo" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.Member">
		select
			 mem.member_id			AS memberId
			,mem.member_name		AS memberName
			,mem.member_birth		AS memberBirth
		from
			 member_login		AS login
			,member				AS mem
		where
			login.member_id = mem.member_id
		and
			mem.member_id = #{memberId}
	</select>
	
	
	<!-- 관리자 : 관리자 자신의 상세 정보 가져오기 -->
	<select id="detailAdminInfoByMemberId"
			parameterType="String"
			resultType="map">
		select
			 login.member_id				AS memberId
			,login.member_pw				AS memberPw
			,mem.member_name				AS memberName
			,mem.member_birth				AS memberBirth
			,mem.member_email				AS memberEmail
			,mem.member_tel					AS memberTel
			,mem.member_phone				AS memberPhone
			,mem.member_address				AS memberAddress
			,mem.member_registered_date		AS memberRegisteredDate
		from
			 member_login		AS login
			,member				AS mem
		where
			login.member_id = mem.member_id
		and
			mem.member_id = #{memberId}
	</select>
	
	
	<!-- 관리자 : 학생이나 강사목록 페이지로 이동하고자 할때 가져올 리스트 -->
	<!-- 관리자 : 입력한 학생명과 가입기간으로 디비에서 권한이 -->
	<!-- 		  학생이나 강사인 사람들만 목록을 가져온다. -->
	<!-- 로그인 테이블 - 회원 신상정보 테이블 아이디로 조인 -->
	<select id="memberInfoList"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.MemberSearchVO"
			resultType="map">
		select
			 m.member_id					AS memberId
			,m.member_level					AS memberLevel
			,me.member_name					AS memberName
			,me.member_birth				AS memberBirth
			,me.member_registered_date		AS memberRegisteredDate
		from
			 member_login					AS m
			,member							AS me
		where
			m.member_id = me.member_id
		and
			m.member_level = #{memberLevel}
		
		<!-- 강사 테이블의 정보를 수정할 경우 -->
		<if test="memberId != null and memberId neq ''.toString()">
		and
			m.member_id = #{memberId}
		</if>
		
		<!-- 이름을 입력했을 경우 -->
		<if test="memberName != null and memberName neq ''.toString()">
		and
			me.member_name like CONCAT('%',#{memberName},'%')
		</if>
		
		<!-- 시작 가입기간만 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  (endJoinDate == null or endJoinDate eq ''.toString())">
		and
			me.member_registered_date >= #{startJoinDate}
		</if>
		
		<!-- 마지막 가입기간만 입력했을 경우 -->
		<if test="startJoinDate == null and startJoinDate eq ''.toString() and
				  (endJoinDate != null or endJoinDate neq ''.toString())">
		and
			me.member_registered_date
		<![CDATA[ < ]]>
			#{endJoinDate}
		</if>
		
		<!-- 시작 가입기간부터 마지막 가입기간까지 입력했을 경우 -->
		<if test="startJoinDate != null and startJoinDate neq ''.toString() and
				  endJoinDate != null and endJoinDate neq ''.toString()">
		and
			me.member_registered_date
		between
			#{startJoinDate}
		and
			#{endJoinDate}
		</if>
	</select>
	
	
	<!-- 로그인 테이블에서 아이디와 비밀번호 일치 여부 확인 -->
	<select id="memberLogin" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin">
		select
			 member_id			AS memberId
			,member_level		AS memberLevel
		from
			member_login
		where
			member_id = #{memberId}
		and
			member_pw = #{memberPw}
	</select>
	
	
	<!-- 로그인 테이블과 회원신상정보 테이블을 아이디로 조인하여 값을 가지고 온다. -->
	<select id="memberLoginInfo" parameterType="String" resultType="map">
		select
			 m.member_id			AS memberId
			,m.member_level			AS memberLevel
			,me.member_name			AS memberName
		from
			member_login m
		inner join
			member me
		on
			m.member_id = me.member_id
		where
			m.member_id = #{memberId}
	</select>
	
	
	
	
	<!-- 관리자 : 상담기준코드 리스트 가져오기 -->
	<!-- 관리자 : 선택한 상담구분코드와 상담결과코드로 상담기준리스트 검색결과 가져오기 -->
	<select id="counselStandardList"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult"
			resultType="map">
		select
			 ct.counsel_type_no					AS counselTypeNo
			,cr.counsel_result_no				AS counselResultNo
			,ct.counsel_type_name				AS counselTypeName
			,cr.counsel_result_name				AS counselResultName
			,ct.counsel_type_is_changed			AS counselTypeIsChanged
			,cr.counsel_result_is_changed		AS counselResultIsChanged
			,cr.counsel_result_registered_date	AS counselResultRegisteredDate
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no
		<if test="counselTypeNo != null and counselTypeNo neq ''.toString() and counselTypeNo neq 'not'">
		and
			ct.counsel_type_no = #{counselTypeNo}
			<if test="counselResultNo != null and counselResultNo neq ''.toString()">
		and
			cr.counsel_result_no = #{counselResultNo}
			</if>
		</if>
	</select>
	
	
	<!-- 관리자 : 상담기준코드 리스트에서 상담구분코드 선택시 -->
	<!-- 		  선택값에 따른 상담결과코드 보이기 -->
	<select id="counselResultListBycounselTypeNo"
			parameterType="String" resultType="map">
		select
			 ct.counsel_type_no					AS counselTypeNo
			,ct.counsel_type_name				AS counselTypeName
			,cr.counsel_result_no				AS counselResultNo
			,cr.counsel_result_name				AS counselResultName
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no		
		and
			cr.counsel_type_no = #{counselTypeNo}
	</select>
	
	
	<!-- 관리자 : 상담구분테이블에 레코드가 존재하는지 확인 -->
	<select id="counselTypeListSize" resultType="int">
		select
			count(*)
		from
			counsel_type
	</select>
	
	
	<!-- 관리자 : 상담구분테이블의 기본키인 상담구분코드 중복 확인 -->
	<select id="counselTypeByCounselTypeNo" parameterType="String" resultType="String">
		select
			counsel_type_no
		from
			counsel_type
		where
			counsel_type_no = #{inputCounselTypeNo}
	</select>
	
	
	<!-- 관리자 : 상담구분코드 리스트 가져오기 -->
	<!-- 관리자 : 상담구분코드 검색결과 리스트 가져오기 -->
	<select id="counselTypeList"
			parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		select
			 counsel_type_no				AS counselTypeNo
			,counsel_type_name				AS counselTypeName
			,counsel_type_is_changed		AS counselTypeIsChanged
			,counsel_type_registered_date	AS counselTypeRegisteredDate
		from
			counsel_type
		<if test="counselTypeNo != null and counselTypeNo neq ''.toString() and counselTypeNo neq 'not'">
		where
			counsel_type_no = #{counselTypeNo}
		</if>
	</select>
	
	
	<!-- 관리자 : 상담구분테이블 추가처리 -->
	<insert id="addCounselType"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		insert into counsel_type (
			 counsel_type_no
			,counsel_type_name
			,counsel_type_is_changed
			,counsel_type_registered_date
		) values (
			 #{counselTypeNo}
			,#{counselTypeName}
			,#{counselTypeIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 상담구분코드 테이블 상세보기 -->
	<select id="detailCounselTypeByCounselTypeNo" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		select
			 counsel_type_no					AS counselTypeNo
			,counsel_type_name					AS counselTypeName
			,counsel_type_reason_for_change		AS counselTypeReasonForChange
			,counsel_type_changed_date			AS counselTypeChangedDate
			,counsel_type_registered_date		AS counselTypeRegisteredDate
		from
			counsel_type
		where
			counsel_type_no = #{counselTypeNo}
	</select>
	
	
	<!-- 관리자 : 상담구분 수정처리 -->
	<update id="updateCounselType"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		update
			counsel_type
		<trim prefix="set" prefixOverrides=",">
			<if test="counselTypeName != null and counselTypeName neq ''.toString()">
				 counsel_type_name				= #{counselTypeName}
			</if>
			<if test="counselTypeReasonForChange != null and counselTypeReasonForChange neq ''.toString()">
				,counsel_type_reason_for_change	= #{counselTypeReasonForChange}
			</if>
				,counsel_type_is_changed		= #{counselTypeIsChanged}
				,counsel_type_changed_date		= curdate()
		</trim>
		where
			counsel_type_no = #{counselTypeNo}
	</update>
	
	
	<!-- 관리자 : 상담구분 삭제 처리 -->
	<delete id="deleteCounselType" parameterType="String">
		delete from
			counsel_type
		where
			counsel_type_no = #{counselTypeNo}
	</delete>
	
	
	
	<!-- 관리자 : 상담결과테이블의 기본키인 상담결과코드 중복 확인 -->
	<select id="counselResultByCounselResultNo" parameterType="String" resultType="String">
		select
			counsel_result_no
		from
			counsel_result
		where
			counsel_result_no = #{inputCounselResultNo}
	</select>
	
	
	<!-- 관리자 : 상담결과테이블 추가처리 -->
	<insert id="addCounselResult"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		insert into counsel_result (
			 counsel_result_no
			,counsel_type_no
			,counsel_result_name
			,counsel_result_is_changed
			,counsel_result_registered_date
		) values (
			 #{counselResultNo}
			,#{counselTypeNo}
			,#{counselResultName}
			,#{counselResultIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 상담결과코드 리스트 가져오기 -->
	<select id="counselResultList"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		select
			 counsel_result_no			AS counselResultNo
			,counsel_result_name		AS counselResultName
		from
			counsel_result
	</select>
	
	
	<!-- 관리자 : 상담결과코드 테이블 상세보기 -->
	<select id="detailCounselResultByCounselResultNo" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		select
			 counsel_result_no						AS counselResultNo
			,counsel_type_no						AS counselTypeNo
			,counsel_result_name					AS counselResultName
			,counsel_result_reason_for_change		AS counselResultReasonForChange
			,counsel_result_changed_date			AS counselResultChangeDate
			,counsel_result_registered_date			AS counselResultRegisteredDate
		from
			counsel_result
		where
			counsel_result_no = #{counselResultNo}
	</select>
	
	
	<!-- 관리자 : 해당 상담결과코드를 참조하는 상담예약목록 가져오기 -->
	<select id="counselAppointmentListBycounselResultNo"
			parameterType="String" resultType="map">
		select
			 ct.counsel_type_no				AS counselTypeNo
			,ct.counsel_type_name			AS counselTypeName
			,cr.counsel_result_no			AS counselResultNo
			,cr.counsel_result_name			AS counselResultName
			,ca.counsel_history_no			AS counselHistoryNo
			,ca.counsel_appointment_date	AS counselAppointmentDate
			,login.member_id				AS memberId
			,mem.member_name				AS memberName
		from
			 counsel_type					AS ct
			,counsel_result					AS cr
			,counsel_appointment			AS ca
			,member_login					AS login
			,member							AS mem
		where
			ct.counsel_type_no = cr.counsel_type_no
		and
			ca.counsel_result_no = cr.counsel_result_no
		and
			ca.member_id = login.member_id
		and
			login.member_id = mem.member_id
		and
			login.member_level = '학생'
		and
			cr.counsel_result_no = #{counselResultNo}
	</select>
	
	
	<!-- 관리자 : 상담결과코드 수정 처리 -->
	<update id="updateCounselResult"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		update
			counsel_result
		<trim prefix="set" prefixOverrides=",">
			<if test="counselTypeNo != null and counselTypeNo neq ''.toString()">
				 counsel_type_no					= #{counselTypeNo}
			</if>
			<if test="counselResultName != null and counselResultName neq ''.toString()">
				 counsel_result_name				= #{counselResultName}
			</if>
			<if test="counselResultReasonForChange != null and counselResultReasonForChange neq ''.toString()">
				,counsel_result_reason_for_change	= #{counselResultReasonForChange}
			</if>
				,counsel_result_is_changed			= #{counselResultIsChanged}
				,counsel_result_changed_date		= curdate()
		</trim>
		where
			counsel_result_no = #{counselResultNo}
	</update>
	
	
	<!-- 관리자 : 상담결과코드 삭제 처리 -->
	<delete id="deleteCounselResult" parameterType="String">
		delete from
			counsel_result
		where
			counsel_result_no = #{counselResultNo}
	</delete>
</mapper>