<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.smart_academy.academy_manage.member.mapper.MemberMapper">
	
	<!-- 로그인 테이블에서 해당 아이디 존재여부 확인 -->
	<select id="memberLoginInfoById" parameterType="String" resultType="String">
		select
			member_id
		from
			member_login
		where
			member_id = #{memberId}
	</select>
	
	
	<!-- 로그인 테이블에서 아이디와 비밀번호 일치 여부 확인 -->
	<select id="memberLogin" parameterType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.MemberLogin">
		select
			 member_id			AS memberId
			,member_level		AS memberLevel
		from
			member_login
		where
			member_id = #{memberId}
		and
			member_pw = #{memberPw}
	</select>
	
	
	<!-- 로그인 테이블과 회원신상정보 테이블을 아이디로 조인하여 값을 가지고 온다. -->
	<select id="memberLoginInfo" parameterType="String" resultType="map">
		select
			 m.member_id			AS memberId
			,m.member_level			AS memberLevel
			,me.member_name			AS memberName
		from
			member_login m
		inner join
			member me
		on
			m.member_id = me.member_id
		where
			m.member_id = #{memberId}
	</select>
	
	
	<!-- 관리자가 회원등록할 시 회원신상정보 테이블에서 유니크값인 이메일이 중복되는지 확인 -->
	<select id="memberByEmail" parameterType="String" resultType="String">
		select
			member_email
		from
			member
		where
			member_email = #{memberEmail}
	</select>
	
	
	<!-- 관리자 : 상담기준코드 리스트 가져오기 -->
	<!-- 관리자 : 선택한 상담구분코드와 상담결과코드로 상담기준리스트 검색결과 가져오기 -->
	<select id="listCounselStandard"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult"
			resultType="map">
		select
			 ct.counsel_type_no					AS counselTypeNo
			,cr.counsel_result_no				AS counselResultNo
			,ct.counsel_type_name				AS counselTypeName
			,cr.counsel_result_name				AS counselResultName
			,ct.counsel_type_is_changed			AS counselTypeIsChanged
			,cr.counsel_result_is_changed		AS counselResultIsChanged
			,cr.counsel_result_registered_date	AS counselResultRegisteredDate
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no
		<if test="counselTypeNo != null and counselTypeNo neq ''.toString() and counselTypeNo neq 'not'">
		and
			ct.counsel_type_no = #{counselTypeNo}
			<if test="counselResultNo != null and counselResultNo neq ''.toString()">
		and
			cr.counsel_result_no = #{counselResultNo}
			</if>
		</if>
	</select>
	
	
	<!-- 관리자 : 상담기준코드 리스트에서 상담구분코드 선택시 -->
	<!-- 		  선택값에 따른 상담결과코드 보이기 -->
	<select id="counselResultListBycounselTypeNo"
			parameterType="String" resultType="map">
		select
			 ct.counsel_type_no					AS counselTypeNo
			,ct.counsel_type_name				AS counselTypeName
			,cr.counsel_result_no				AS counselResultNo
			,cr.counsel_result_name				AS counselResultName
		from
			 counsel_type			AS ct
			,counsel_result			AS cr
		where
			ct.counsel_type_no = cr.counsel_type_no		
		and
			cr.counsel_type_no = #{counselTypeNo}
	</select>
	
	
	<!-- 관리자 : 상담구분테이블에 레코드가 존재하는지 확인 -->
	<select id="counselTypeListSize" resultType="int">
		select
			count(*)
		from
			counsel_type
	</select>
	
	
	<!-- 관리자 : 상담구분테이블의 기본키인 상담구분코드 중복 확인 -->
	<select id="counselTypeByCounselTypeNo" parameterType="String" resultType="String">
		select
			counsel_type_no
		from
			counsel_type
		where
			counsel_type_no = #{inputCounselTypeNo}
	</select>
	
	
	<!-- 관리자 : 상담구분코드 리스트 가져오기 -->
	<select id="counselTypeList"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		select
			 counsel_type_no			AS counselTypeNo
			,counsel_type_name			AS counselTypeName
		from
			 counsel_type
	</select>
	
	
	<!-- 관리자 : 상담구분테이블 추가처리 -->
	<insert id="addCounselType"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		insert into counsel_type (
			 counsel_type_no
			,counsel_type_name
			,counsel_type_is_changed
			,counsel_type_registered_date
		) values (
			 #{counselTypeNo}
			,#{counselTypeName}
			,#{counselTypeIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 상담구분코드 테이블 상세보기 -->
	<select id="detailCounselTypeByCounselTypeNo" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselType">
		select
			 counsel_type_no					AS counselTypeNo
			,counsel_type_name					AS counselTypeName
			,counsel_type_reason_for_change		AS counselTypeReasonForChange
			,counsel_type_changed_date			AS counselTypeChangedDate
			,counsel_type_registered_date		AS counselTypeRegisteredDate
		from
			counsel_type
		where
			counsel_type_no = #{counselTypeNo}
	</select>
	
	
	<!-- 관리자 : 상담결과테이블의 기본키인 상담결과코드 중복 확인 -->
	<select id="counselResultByCounselResultNo" parameterType="String" resultType="String">
		select
			counsel_result_no
		from
			counsel_result
		where
			counsel_result_no = #{inputCounselResultNo}
	</select>
	
	
	<!-- 관리자 : 상담결과테이블 추가처리 -->
	<insert id="addCounselResult"
			parameterType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		insert into counsel_result (
			 counsel_result_no
			,counsel_type_no
			,counsel_result_name
			,counsel_result_is_changed
			,counsel_result_registered_date
		) values (
			 #{counselResultNo}
			,#{counselTypeNo}
			,#{counselResultName}
			,#{counselResultIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 상담결과코드 리스트 가져오기 -->
	<select id="counselResultList"
			resultType="com.cafe24.smart_academy.academy_manage.member.vo.CounselResult">
		select
			 counsel_result_no			AS counselResultNo
			,counsel_result_name		AS counselResultName
		from
			counsel_result
	</select>
	
	
	<!-- 관리자 : 상담결과코드 테이블 상세보기 -->
	<select id="" parameterType="String" resultType="map">
		select
			 counsel_result_no		AS counselResultNo
			,(select
				ct.counsel_type_name 
			  from
			  	 counsel_type		AS ct
			  	,counsel_result		AS cr
			  where
			  	ct.counsel_type_no		= cr.counsel_type_no
			  and
			  	cr.counsel_result_no	= #{counselResultNo}) AS counselTypeName
			,counsel_result_name					AS counselResultName
			,counsel_result_reason_for_change		AS counselResultReasonForChange
			,counsel_result_changed_date			AS counselResultChangeDate
			,counsel_result_registered_date			AS counselResultRegisteredDate
		from
			counsel_result
		where
			counsel_result_no = #{counselResultNo}
	</select>
</mapper>