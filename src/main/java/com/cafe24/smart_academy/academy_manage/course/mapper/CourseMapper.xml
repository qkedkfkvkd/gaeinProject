<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.smart_academy.academy_manage.course.mapper.CourseMapper">
	
	<!-- 관리자 : 강좌테이블에서 해당 강좌코드 존재 확인 -->
	<select id="courseByCourseNo" parameterType="String" resultType="String">
		select
			course_no
		from
			course
		where
			course_no = #{inputCourseNo}
	</select>
	
	
	<!-- 관리자 : 강좌 추가 처리 -->
	<insert id="addCourse"
			parameterType="com.cafe24.smart_academy.academy_manage.course.vo.Course">
		insert into course (
			 course_no
			,subject_no
			,course_name
			,course_is_changed
			,course_registered_date
		) values (
			 #{courseNo}
			,#{subjectNo}
			,#{courseName}
			,#{courseIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 강좌목록 가져오기 -->
	<!-- 관리자 : 해당 강좌코드로 강좌 상세정보 가져오기 -->
	<select id="courseOneOrList"
			parameterType="map"
			resultType="map">
		select
			 co.course_no					AS courseNo
			,co.course_name					AS courseName
			,co.course_is_changed			AS courseIsChanged
			,co.course_reason_for_change	AS courseReasonForChange
			,co.course_changed_date			AS courseChangedDate
			,co.course_registered_date		AS courseRegisteredDate
			,sub.subject_no					AS subjectNo
			,sub.subject_name				AS subjectName
		from
			 course			AS co
			,subject		AS sub
		where
			co.subject_no = sub.subject_no
		<if test="subjectNo != null and subjectNo neq ''.toString()">
		and
			co.subject_no = #{subjectNo}
		</if>
		<if test="courseName != null and courseName neq ''.toString()">
		and
			co.course_name like concat('%',#{courseName},'%')
		</if>
		<if test="courseNo != null and courseNo neq ''.toString()">
		and
			co.course_no = #{courseNo}
		</if>
	</select>
	
	
	<!-- 관리자 : 과목 리스트에서 과목코드 선택시 자동으로 -->
	<!-- 		  해당 과목코드에 맞는 강좌 나오게 하기 -->
	<select id="courseListBySubjectNo" parameterType="String"
			resultType="map">
		select
			 co.course_no				AS courseNo
			,co.course_name				AS courseName
			,sub.subject_name			AS subjectName
			,co.course_registered_date	AS courseRegisteredDate
		from
			 course						AS co
			,subject					AS sub
		where
			co.subject_no = sub.subject_no
		and
			co.subject_no = #{subjectNo}
	</select>
	
	
	<!-- 관리자 : 강좌 수정 처리 -->
	<update id="updateCourse"
			parameterType="com.cafe24.smart_academy.academy_manage.course.vo.Course">
		update
			course
		<trim prefix="set" prefixOverrides=",">
			<if test="subjectNo != null and subjectNo neq ''.toString()">
				 subject_no					= #{subjectNo}
			</if>
			<if test="courseName != null and courseName neq ''.toString()">
				,course_name				= #{courseName}
			</if>
			<if test="courseReasonForChange != null and courseReasonForChange neq ''.toString()">
				,course_reason_for_change	= #{courseReasonForChange}
			</if>
				,course_is_changed			= #{courseIsChanged}
				,course_changed_date		= curdate()
		</trim>
		where
			course_no = #{courseNo}
	</update>
	
	
	<!-- 관리자 : 해당 강좌 삭제 처리 -->
	<delete id="deleteCourse" parameterType="String">
		delete from
			course
		where
			course_no = #{courseNo}
	</delete>
	
	
	
	
	
	<!-- 강사와 매칭되지 않은 강좌 리스트 및 해당 강좌 코드로 강좌정보 가져오기 -->
	<!-- 강좌코드, 강좌명, 과목명, 강좌등록일 -->
	<select id="courseNotAssignmentTeacherSimpleList"
			parameterType="com.cafe24.smart_academy.academy_manage.course.vo.Course"
			resultType="map">
		select
			 co.course_no					AS courseNo
			,co.course_name					AS courseName
			,(select
				subject_name
			  from
			  	subject
			  where
			  	subject_no
			  in
			  	(co.subject_no))			AS subjectName
			,co.course_is_changed			AS courseIsChanged
			,co.course_registered_date		AS courseRegisteredDate
		from
			course							AS co
		left join
			teacher							AS tea
		on
			co.course_no = tea.course_no
		where
			tea.course_no is null
		<if test="subjectNo != null and subjectNo neq ''.toString()">
		and
			co.subject_no = #{subjectNo}
		</if>
		<if test="courseName != null and courseName neq ''.toString()">
		and
			co.course_name = #{courseName}
		</if>
	</select>
	
	
	<!-- 관리자 : 강사가 배정된 강사 리스트 가져오기 -->
	<select id="courseAssignTeacherList"
			parameterType="com.cafe24.smart_academy.academy_manage.course.vo.Course"
			resultType="map">
		select
			 co.course_no					AS courseNo
			,co.course_name					AS courseName
			,co.course_is_changed			AS courseIsChanged
			,co.course_registered_date		AS courseRegisteredDate
			,sub.subject_no					AS subjectNo
			,sub.subject_name				AS subjectName
			,tea.member_id					AS memberId
			,mem.member_name				AS memberName
		from
			 course			AS co
			,subject		AS sub
			,teacher		AS tea
			,member_login	AS login
			,member			AS mem
		where
			co.subject_no = sub.subject_no
		and
			co.course_no = tea.course_no
		and
			tea.member_id = login.member_id
		and
			login.member_id = mem.member_id
		and
			login.member_level = '강사'
		<if test="subjectNo != null and subjectNo neq ''.toString()">
		and
			co.subject_no = #{subjectNo}
		</if>
		<if test="courseName != null and courseName neq ''.toString()">
		and
			co.course_name = #{courseName}
		</if>
		<!-- 해당 강좌로 등록된 강사 목록 찾기 -->
		<if test="courseNo != null and courseNo neq ''.toString()">
		and
			tea.course_no = #{courseNo}
		</if>
	</select>
	
	
	
	
	
	<!-- 관리자 : 강좌강의실배정 테이블에서 해당 배정코드 존재 확인 -->
	<select id="courseRoomAssignByCourseAssignmentNo"
			parameterType="String" resultType="String">
		select
			course_assignment_no
		from
			course_room_assignment
		where
			course_assignment_no = #{courseAssignmentNo}
	</select>
	
	
	<!-- 관리자 : 강좌강의실배정 추가처리 -->
	<insert id="addCourseRoomAssignment"
			parameterType="com.cafe24.smart_academy.academy_manage.course.vo.CourseRoomAssignment">
		insert into course_room_assignment (
			 course_assignment_no
			,room_no
			,course_no
			,course_assignment_is_changed
			,course_assignment_registered_date
		) values (
			 #{courseAssignmentNo}
			,#{roomNo}
			,#{courseNo}
			,#{courseAssignmentIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 강사가 배정이 안된 강좌 강의실 배정 목록 상세히 가져오기 -->
	<!-- 관리자 : 강사가 배정이 안된 강좌의 상세 정보 가져오기 -->
	<select id="courseNotAssignTeacherOneOrList"
			parameterType="map"
			resultType="map">
		select
			 co.course_no								AS courseNo
			,co.course_name								AS courseName
			,co.course_reason_for_change				AS courseReasonForChange
			,co.course_changed_date						AS courseChangedDate
			,co.course_registered_date					AS courseRegisteredDate
			,sub.subject_no								AS subjectNo
			,sub.subject_name							AS subjectName
			,cra.course_assignment_no					AS courseAssignmentNo
			,cra.course_assignment_reason_for_change	AS courseAssignmentReasonForChange
			,cra.course_assignment_changed_date			AS courseAssignmentChangedDate
			,cra.course_assignment_registered_date		AS courseAssignmentRegisteredDate
			,ro.room_no									AS roomNo
			,ro.room_number								AS roomNumber
			,ro.room_floor								AS foomFloor
		from
			 course						AS co
			,subject					AS sub
			,academy_room				AS ro
			,course_room_assignment		AS cra
		where
			co.subject_no = sub.subject_no
		and
			cra.room_no = ro.room_no
		and
			cra.course_no = co.course_no
		<if test="courseNoList != null">
		and
			co.course_no in
			<foreach collection="courseNoList" item="item" index="index" separator="," open="(" close=")">
				#{item,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="courseNo != null and courseNo neq ''.toString()">
		and
			co.course_no = #{courseNo}
		</if>
		<if test="courseAssignmentNo != null and courseAssignmentNo neq ''.toString()">
		and
			cra.course_assignment_no = #{courseAssignmentNo}
		</if>
		<if test="subjectNo != null and subjectNo neq ''.toString()">
		and
			co.subject_no = #{subjectNo}
		</if>
		<if test="courseName != null and courseName neq ''.toString()">
		and
			co.course_name like concat('%',#{courseName},'%')
		</if>
		<!-- 해당 강의실을 참조하는 강좌강의실 배정 목록 -->
		<if test="roomNo != null and roomNo neq ''.toString()">
		and
			cra.room_no = #{roomNo}
		</if>
	</select>
	
	
	<!-- 관리자 : 강좌배정목록 가져오기 -->
	<!-- 관리자 : 선택한 과목코드 혹은 과목코드와 강좌코드로 강좌 리스트 검색 -->
	<!-- 관리자 : 강좌 강의실 배정 및 강사 강좌 배정 상세 데이터 가져오기 -->
	<select id="courseAssignmentOneOrList"
			parameterType="com.cafe24.smart_academy.academy_manage.course.vo.CourseRoomSearchVO"
			resultType="map">
		select
			 co.course_no								AS courseNo
			,co.course_name								AS courseName
			,co.course_reason_for_change				AS courseReasonForChange
			,co.course_changed_date						AS courseChangedDate
			,co.course_registered_date					AS courseRegisteredDate
			,sub.subject_no								AS subjectNo
			,sub.subject_name							AS subjectName
			,cra.course_assignment_no					AS courseAssignmentNo
			,cra.course_assignment_reason_for_change	AS courseAssignmentReasonForChange
			,cra.course_assignment_changed_date			AS courseAssignmentChangedDate
			,cra.course_assignment_registered_date		AS courseAssignmentRegisteredDate
			,ro.room_no									AS roomNo
			,ro.room_number								AS roomNumber
			,ro.room_floor								AS foomFloor
			,tea.member_id								AS memberId
			,tea.teacher_reason_for_change				AS teacherReasonForChange
			,tea.teacher_changed_date					AS teacherChangedDate
			,mem.member_name							AS memberName
		from
			 course						AS co
			,subject					AS sub
			,academy_room				AS ro
			,course_room_assignment		AS cra
			,teacher					AS tea
			,member						AS mem
		where
			co.subject_no = sub.subject_no
		and
			cra.room_no = ro.room_no
		and
			cra.course_no = co.course_no
		and
			co.course_no = tea.course_no
		and
			tea.member_id = mem.member_id
		<!-- 강좌 강의실 배정 및 강사 강좌 배정 상세 데이터 가져오기 -->
		<if test="courseAssignmentNo != null and courseAssignmentNo neq ''.toString()">
		and
			cra.course_assignment_no = #{courseAssignmentNo}
		</if>
		<!-- 강좌 강의실 배정 및 강사 강좌 배정 상세 데이터 가져오기 -->
		<if test="memberId != null and memberId neq ''.toString()">
		and
			tea.member_id = #{memberId}
		</if>
		<!-- 과목을 선택했을 때, 특정 과목을 참조하는 강좌리스트 -->
		<if test="subjectNo != null and subjectNo neq ''.toString() and subjectNo neq 'not'">
		and
			co.subject_no = #{subjectNo}
		</if>
		<!-- 리스트 검색 폼에서 과목을 선택하고 강좌를 선택했을 경우, 강좌상세화면에서 특정 강좌를 선택했을 경우 -->
		<if test="courseNo != null and courseNo neq ''.toString()">
		and
			co.course_no = #{courseNo}
		</if>
		<!-- 특정 강의실을 참조하는 강좌리스트 -->
		<if test="roomNo != null and roomNo neq ''.toString()">
		and
			ro.room_no = #{roomNo}
		</if>
	</select>
	
	
	<!-- 관리자 : 강좌강의실배정 수정처리 -->
	<update id="updateCourseAssignment"
			parameterType="com.cafe24.smart_academy.academy_manage.course.vo.CourseRoomAssignment">
		update
			course_room_assignment
		<trim prefix="set" prefixOverrides=",">
			<if test="roomNo != null and roomNo neq ''.toString()">
				 room_no								= #{roomNo}
			</if>
			<if test="courseAssignmentReasonForChange != null and courseAssignmentReasonForChange neq ''.toString()">
				,course_assignment_reason_for_change	= #{courseAssignmentReasonForChange}
			</if>
				,course_assignment_is_changed			= #{courseAssignmentIsChanged}
				,course_assignment_changed_date			= curdate()
		</trim>
		where
			course_assignment_no = #{courseAssignmentNo}
	</update>
	
	
	<!-- 관리자 : 해당 강좌배정내용 삭제 -->
	<delete id="deleteCourseRoomAssignment" parameterType="String">
		delete from
			course_room_assignment
		where
			course_assignment_no = #{courseAssignmentNo}
	</delete>
	
	
	
	
	
	<!-- 관리자 : 강사가 배정이 안된 강좌의 상세 정보 가져오기 -->
	<!-- 관리자 : 강좌 상세정보 가져오기 -->
	<!-- <select id="detailNotAssignTeacherCourseByCourseNo" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.course.vo.Course">
		select
			 course_no					AS courseNo
			,subject_no					AS subjectNo
			,course_name				AS courseName
			,course_reason_for_change	AS courseReasonForChange
			,course_changed_date		AS courseChangedDate
			,course_registered_date		AS courseRegisteredDate
		from
			course
		where
			course_no = #{courseNo}
	</select> -->
	
	
	<!-- 관리자 : 강사가 배정이 안된 강좌 강의실 배정 목록 가져오기 -->
	<!-- <select id="courseNotAssignTeacherList"
			parameterType="String" resultType="map">
		select
			 co.course_no								AS courseNo
			,co.course_name								AS courseName
			,sub.subject_no								AS subjectNo
			,sub.subject_name							AS subjectName
			,cra.course_assignment_no					AS courseAssignmentNo
			,cra.course_assignment_registered_date		AS courseAssignmentRegisteredDate
			,ro.room_no									AS roomNo
			,ro.room_number								AS roomNumber
			,ro.room_floor								AS foomFloor
		from
			 course						AS co
			,subject					AS sub
			,academy_room				AS ro
			,course_room_assignment		AS cra
		where
			co.subject_no = sub.subject_no
		and
			cra.room_no = ro.room_no
		and
			cra.course_no = co.course_no
		and
			co.course_no = #{courseNo}
	</select> -->
</mapper>