<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.smart_academy.academy_manage.course.manage.mapper.CourseManageMapper">
	
	<!-- 관리자 : 과목코드 리스트 가져오기 -->
	<select id="listSubject"
			resultType="com.cafe24.smart_academy.academy_manage.course.manage.vo.Subject">
		select
			 subject_no						AS subjectNo
			,subject_name					AS subjectName
			,subject_is_changed				AS subjectIsChanged
			,subject_registered_date		AS subjectRegisteredDate
		from
			subject
	</select>
	
	
	<!-- 관리자 : 과목테이블에서 해당 과목코드가 이미 존재하는지 확인 -->
	<select id="subjectBySubjectNo" parameterType="String" resultType="String">
		select
			subject_no
		from
			subject
		where
			subject_no = #{subjectNo}
	</select>
	
	
	<!-- 관리자 : 과목테이블에 과목 추가 처리 -->
	<insert id="addSubject"
			parameterType="com.cafe24.smart_academy.academy_manage.course.manage.vo.Subject">
		insert into subject (
			 subject_no
			,subject_name
			,subject_is_changed
			,subject_registered_date
		) values (
			 #{subjectNo}
			,#{subjectName}
			,#{subjectIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자: 과목 수정을 위해 해당 과목코드의 모든 데이터 가져오기 -->
	<select id="detailSubjectBySubjectNo" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.course.manage.vo.Subject">
		select
			 subject_no					AS subjectNo
			,subject_name				AS subjectName
			,subject_reason_for_change	AS subjectReasonForChange
			,subject_changed_date		AS subjectChangedDate
			,subject_registered_date	AS subjectRegisteredDate
		from
			subject
		where
			subject_no = #{subjectNo}
	</select>
	
	
	<!-- 관리자 : 과목 수정 처리 -->
	<update id="updateSubject"
			parameterType="com.cafe24.smart_academy.academy_manage.course.manage.vo.Subject">
		update
			subject
		<trim prefix="set" prefixOverrides=",">
			<if test="subjectName != null and subjectName neq ''.toString()">
				 subject_name				= #{subjectName}
			</if>
			<if test="subjectReasonForChange != null and subjectReasonForChange neq ''.toString()">
				,subject_reason_for_change	= #{subjectReasonForChange}
			</if>
				,subject_is_changed			= #{subjectIsChanged}
				,subject_changed_date		= curdate()
		</trim>
		where
			subject_no = #{subjectNo}
	</update>
	
	
	
	<!-- 관리자 : 강의실 리스트 가져오기 -->
	<!-- 관리자 : 강의실 목록에서 강의실 검색 -->
	<select id="listAcademyRoom"
			parameterType="com.cafe24.smart_academy.academy_manage.course.manage.vo.AcademyRoom"
			resultType="com.cafe24.smart_academy.academy_manage.course.manage.vo.AcademyRoom">
		select
			 room_no				AS roomNo
			,room_number			AS roomNumber
			,room_floor				AS roomFloor
			,room_usage				AS roomUsage
			,room_is_changed		AS roomIsChanged
			,room_registered_date	AS roomRegisteredDate
		from
			academy_room
		<trim prefix="WHERE" prefixOverrides="and|or">
			<if test="roomFloor != null and roomFloor neq ''.toString() and roomFloor neq '0'">
					room_floor = #{roomFloor}
				<if test="roomUsage != null and roomUsage neq ''.toString()">
				and
					room_usage = #{roomUsage}
				</if>
			</if>
		</trim>
	</select>
	
	
	<!-- 관리자 : 강의실 리스트에서 층수 선택시 자동으로 -->
	<!-- 해당 층수에 맞는 실용도 나오게 하기 -->
	<select id="roomUsageListByRoomFloor" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.course.manage.vo.AcademyRoom">
		select
			room_usage		AS roomUsage
		from
			academy_room
		where
			room_floor = #{roomFloor}
	</select>
	
	
	<!-- 관리자 : 강의실 코드 중복 확인 -->
	<select id="academyRoomByRoomNo"
			parameterType="String" resultType="String">
		select
			room_no
		from
			academy_room
		where
		room_no = #{roomNo}
	</select>
	
	
	<!-- 관리자 : 강의실 테이블에 해당 강의실 추가 -->
	<insert id="addAcademyRoom"
			parameterType="com.cafe24.smart_academy.academy_manage.course.manage.vo.AcademyRoom">
		insert into academy_room (
			 room_no
			,room_number
			,room_floor
			,room_usage
			,room_is_changed
			,room_registered_date
		) values (
			 #{roomNo}
			,#{roomNumber}
			,#{roomFloor}
			,#{roomUsage}
			,#{roomIsChanged}
			,curdate()
		)
	</insert>
	
	
	<!-- 관리자 : 강의실 상세 보기 -->
	<select id="detailRoomByRoomNo" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.course.manage.vo.AcademyRoom">
		select
			 room_no					AS roomNo
			,room_number				AS roomNumber
			,room_floor					AS roomFloor
			,room_usage					AS roomUsage
			,room_is_changed			AS roomIsChanged
			,room_reason_for_change		AS roomReasonForChange
			,room_changed_date			AS roomChangedDate
			,room_registered_date		AS roomRegisteredDate
		from
			academy_room
		where
			room_no = #{roomNo}
	</select>
	
	
	<!-- 관리자 : 강의실 수정 처리 -->
	<update id="updateAcademyRoom"
			parameterType="com.cafe24.smart_academy.academy_manage.course.manage.vo.AcademyRoom">
		update
			academy_room
		<trim prefix="set" prefixOverrides=",">
			<if test="roomNumber != null and roomNumber neq ''.toString()">
				 room_number				= #{roomNumber}
			</if>
			<if test="roomFloor != null and roomFloor neq ''.toString()">
				,room_floor					= #{roomFloor}
			</if>
			<if test="roomUsage != null and roomUsage neq ''.toString()">
				,room_usage					= #{roomUsage}
			</if>
			<if test="roomReasonForChange != null and roomReasonForChange neq ''.toString()">
				,room_reason_for_change		= #{roomReasonForChange}
			</if>
				,room_is_changed			= #{roomIsChanged}
				,room_changed_date			= curdate()
		</trim>
		where
			room_no = #{roomNo}
	</update>
	
	
	
	<!-- 관리자 : 성적기준 리스트 가져오기 -->
	<!-- 관리자 : 성적기준을 선택하여 검색하기 -->
	<select id="listGradingCriteria" parameterType="String"
			resultType="com.cafe24.smart_academy.academy_manage.course.manage.vo.GradingCriteria">
		select
			 grading_criteria_rating				AS gradingCriteriaRating
			,grading_criteria_start_of_section		AS gradingCriteriaStartOfSection
			,grading_criteria_end_of_section		AS gradingCriteriaEndOfSection
			,grading_criteria						AS gradingCriteria
			,grading_criteria_registered_date		AS gradingCriteriaRegisteredDate
		from
			grading_criteria
		<trim prefix="where">
			<if test="gradingCriteriaRating != null and gradingCriteriaRating neq ''.toString()">
				grading_criteria_rating = #{gradingCriteriaRating}
			</if>
		</trim>
	</select>
	
	
	<!-- 관리자 : 성적기준 테이블의 기본키인 등급 중복 확인 -->
	<select id="gradingCriteriaRatingOverlapCheck"
			parameterType="String" resultType="String">
		select
			grading_criteria_rating
		from
			grading_criteria
		where
			grading_criteria_rating = #{gradingCriteriaRating}
	</select>
	
	
	<!-- 관리자 : 성적기준 테이블에 해당 성적기준 추가 -->
	<insert id="addGradingCriteria"
			parameterType="com.cafe24.smart_academy.academy_manage.course.manage.vo.GradingCriteria">
		insert into grading_criteria (
			 grading_criteria_rating
			,grading_criteria_start_of_section
			,grading_criteria_end_of_section
			,grading_criteria
			,grading_criteria_registered_date
		) values (
			 #{gradingCriteriaRating}
			,#{gradingCriteriaStartOfSection}
			,#{gradingCriteriaEndOfSection}
			,#{gradingCriteria}
			,curdate()
		)
	</insert>
</mapper>